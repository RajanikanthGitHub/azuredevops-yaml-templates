trigger:
- master

variables:
  backendServiceArm: 'PSL011124_Rackspace-NHS_PB_0015077(e5c53a81-f5c9-4864-b65a-d6fc347b4e2d)'
  backendAzureRmResourceGroup: 'tf-azdo-demo-rsg'
  backendAzureRmStorageAccountName: 'tfazdodemostgrk001'
  backendAzureRmContainerName: 'terraform-state'
  location: 'eastus'
  tfBackendEnvironment: tf_backend
  devEnvironment: dev
  testEnvironment: test
  prodEnvironment: prod
  tfWorkingDirectory: 'terraform' 

stages:
- template: template-create-terraform-backend.yaml
  parameters:
    environment: ${{ variables.tfBackendEnvironment }}
    environmentDisplayName: Create TF Backend
    backendServiceArm: ${{ variables.backendServiceArm }}
    backendAzureRmResourceGroup: ${{ variables.backendAzureRmResourceGroup }}
    backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
    backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
    location: ${{ variables.location }}
    dependsOn: []

- template: template-terraform-stages.yaml
  parameters:
    environment: ${{ variables.devEnvironment}}
    environmentDisplayName: DEV
    backendServiceArm: ${{ variables.backendServiceArm }}
    backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
    backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
    backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
    backendAzureRmKey: $(devEnvironment).tfstate
    workingDirectory: $(tfworkingDirectory)
    dependsOn: ['${{ variables.tfBackendEnvironment}}']

- template: template-terraform-stages.yaml
  parameters:
    environment: ${{ variables.testEnvironment}}
    environmentDisplayName: TEST
    backendServiceArm: ${{ variables.backendServiceArm }}
    backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
    backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
    backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
    backendAzureRmKey: $(testEnvironment).tfstate
    workingDirectory: $(tfworkingDirectory)
    dependsOn: ['${{ variables.tfBackendEnvironment}}']

template: template-terraform-stages.yaml
  parameters:
    environment: ${{ variables.prodEnvironment}}
    environmentDisplayName: PRODUCTION
    backendServiceArm: ${{ variables.backendServiceArm }}
    backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
    backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
    backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
    backendAzureRmKey: $(prodEnvironment).tfstate
    workingDirectory: $(tfworkingDirectory)
    dependsOn: ['${{ variables.tfBackendEnvironment }}', '${{ variables.devEnvironment }}', '${{ variables.testEnvironment }}']